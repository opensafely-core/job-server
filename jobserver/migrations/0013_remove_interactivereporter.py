# Generated by Django 5.1.6 on 2025-03-19 12:00

from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations

from jobserver.authorization.roles import InteractiveReporter
from jobserver.commands import project_members
from jobserver.models import ProjectMembership


def remove_interactive_reporter_project_role(apps):
    # The ProjectMembership model has the ImmutableModelMixin
    # which provides an `override` parameter to the overridden model save()
    # (which is absent in the base model save() method)
    # and is provided when called within update_roles().
    # The recommended way of accessing django model classes in migrations
    # is using apps.get_model(), however this just returns a vanilla model
    # class with no mixins and so the call to save(override=True) fails.

    User = apps.get_model("jobserver", "User")
    try:
        modified_by = User.objects.get(username="Jongmassey")
    except ObjectDoesNotExist:
        # JM user doesn't exist during tests.
        modified_by = User.objects.first()
    memberships_with_interactive_reporter = ProjectMembership.objects.filter(
        roles__contains=InteractiveReporter
    )
    for membership in memberships_with_interactive_reporter:
        roles = list(set(membership.roles) - {InteractiveReporter})
        project_members.update_roles(membership=membership, roles=roles, by=modified_by)


def remove_interactive_reporter_user_role(apps):
    User = apps.get_model("jobserver", "User")
    users_with_interactive_reporter = User.objects.filter(
        roles__contains=InteractiveReporter
    )
    for user in users_with_interactive_reporter:
        user.roles.remove(InteractiveReporter)
    User.objects.bulk_update(users_with_interactive_reporter, ["roles"])


def remove_interactive_reporter_roles(apps, schema_editor):
    remove_interactive_reporter_project_role(apps)
    remove_interactive_reporter_user_role(apps)


class Migration(migrations.Migration):
    dependencies = [
        ("jobserver", "0012_remove_publishrequest_report_delete_report"),
    ]

    operations = [
        migrations.RunPython(
            remove_interactive_reporter_roles,
            reverse_code=migrations.RunPython.noop,
        )
    ]
