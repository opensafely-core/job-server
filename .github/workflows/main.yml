---
name: CI

on:
  push:

jobs:
  assets:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: 'npm'

      - name: Install node_modules
        run: just assets-install

      - name: Lint assets
        run: npm run lint

      # - name: Run JS tests
      #   run: npm run test:coverage

      - name: Build assets
        run: just assets-build

      - name: Store assets
        uses: actions/upload-artifact@v3
        with:
          name: node-assets
          path: assets/dist

  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v4"
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: requirements.*.txt
      - uses: extractions/setup-just@v1
      - name: Check formatting, linting and import sorting
        run: just check

  test:
    needs: [assets]
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: jobserver
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v4"
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: requirements.*.txt
      - uses: extractions/setup-just@v1

      - name: Retrieve assets
        uses: actions/download-artifact@v3
        with:
          name: node-assets
          path: assets/dist

      - name: Run tests
        env:
          DATABASE_URL: postgres://user:password@localhost/jobserver
          GITHUB_TOKEN: empty
          GITHUB_TOKEN_TESTING: ${{ secrets.OPENSAFELY_GITHUB_TESTING_ORG_PAT }}
          SECRET_KEY: 12345
          SOCIAL_AUTH_GITHUB_KEY: test
          SOCIAL_AUTH_GITHUB_SECRET: test
        run: |
          just check-migrations
          just test --migrations

  lint-dockerfile:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@f988afea3da57ee48710a9795b6bb677cc901183

  deploy:
    needs: [check, test, lint-dockerfile]
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    concurrency: deploy-production

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Deploy to dokku
        uses: opensafely-core/dokku-deploy-github-action@v1
        with:
          app-name: "job-server"
          dokku-host: ${{ secrets.DOKKU_HOST }}
          ssh-private-key: ${{ secrets.DOKKU2_DEPLOY_SSH_KEY }}
          remote-branch: "main"

      - name: Create Sentry release
        uses: getsentry/action-release@426b54786363ee2ecb27129f04b99cf714a36d38
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_RELEASE_INTEGRATION_TOKEN }}
          SENTRY_ORG: ebm-datalab
          SENTRY_PROJECT: job-server
        with:
          environment: production
